{
    "openapi": "3.0.0",
    "info": {
        "title": "Eltuvchi API",
        "description": "Eltuvchi platformasi uchun API hujjatlari",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local server"
        }
    ],
    "paths": {
        "/api/super-admin/clients": {
            "get": {
                "tags": [
                    "Admin Clients"
                ],
                "summary": "Get paginated list of clients",
                "operationId": "a37da3d9212585eabb6f7ad8bcad6653",
                "responses": {
                    "200": {
                        "description": "Paginated list of clients",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AdminClient"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/super-admin/clients/{client}": {
            "get": {
                "tags": [
                    "Admin Clients"
                ],
                "summary": "Get a single client",
                "operationId": "3902a52061ca05b2940488e6325107ae",
                "parameters": [
                    {
                        "name": "client",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminClient"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin Clients"
                ],
                "summary": "Update a client",
                "operationId": "ae54ddbbcfcc9d5d83f9d048fb2d9218",
                "parameters": [
                    {
                        "name": "client",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string"
                                    },
                                    "balance": {
                                        "type": "integer"
                                    },
                                    "points": {
                                        "type": "integer"
                                    },
                                    "settings": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminClient"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Clients"
                ],
                "summary": "Mark client as inactive",
                "operationId": "e2224ff2d87c90d2aa8d033b7a9c75d0",
                "parameters": [
                    {
                        "name": "client",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client marked as inactive",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminClient"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/super-admin/dashboard": {
            "get": {
                "tags": [
                    "Admin Dashboard"
                ],
                "summary": "Get admin dashboard statistics",
                "description": "Returns counts, orders and revenue statistics for the dashboard.",
                "operationId": "966a4ca21ac3b3cdec22aeb6b765a06e",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "data": {
                                            "properties": {
                                                "counts": {
                                                    "properties": {
                                                        "drivers": {
                                                            "type": "integer",
                                                            "example": 12
                                                        },
                                                        "clients": {
                                                            "type": "integer",
                                                            "example": 100
                                                        },
                                                        "dispatchers": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "admins": {
                                                            "type": "integer",
                                                            "example": 2
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "orders": {
                                                    "properties": {
                                                        "today": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "week": {
                                                            "type": "integer",
                                                            "example": 120
                                                        },
                                                        "month": {
                                                            "type": "integer",
                                                            "example": 450
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 1200
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "revenue": {
                                                    "properties": {
                                                        "today": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 250000.5
                                                        },
                                                        "week": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 1200000
                                                        },
                                                        "month": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 4000000
                                                        },
                                                        "total": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 15000000
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/super-admin/dispatchers": {
            "get": {
                "tags": [
                    "Admin Dispatcher"
                ],
                "summary": "Get list of all dispatchers",
                "operationId": "401758a2543078161f5870bdee8b903d",
                "responses": {
                    "200": {
                        "description": "List of dispatchers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AdminDispatcher"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin Dispatcher"
                ],
                "summary": "Create new dispatcher",
                "operationId": "b95d3de4178835032b52aff6e3a63d13",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "taxopark_id",
                                    "full_name"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "taxopark_id": {
                                        "type": "integer"
                                    },
                                    "full_name": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "boolean"
                                    },
                                    "details": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Dispatcher created"
                    }
                }
            }
        },
        "/api/super-admin/dispatchers/{dispatcher}": {
            "get": {
                "tags": [
                    "Admin Dispatcher"
                ],
                "summary": "Get single dispatcher",
                "operationId": "756a548aaccc420b3d59f78d086dab0c",
                "parameters": [
                    {
                        "name": "dispatcher",
                        "in": "path",
                        "description": "Dispatcher ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dispatcher details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminDispatcher"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Admin Dispatcher"
                ],
                "summary": "Update dispatcher",
                "operationId": "69318ed80334831069cee5bbd92ca492",
                "parameters": [
                    {
                        "name": "dispatcher",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "full_name": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "boolean"
                                    },
                                    "details": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Dispatcher updated"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin Dispatcher"
                ],
                "summary": "Deactivate dispatcher (soft delete)",
                "operationId": "614576d67cc43e41e7a3d24ea54ab5d1",
                "parameters": [
                    {
                        "name": "dispatcher",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dispatcher deactivated"
                    }
                }
            }
        },
        "/api/super-admin/drivers": {
            "get": {
                "tags": [
                    "Admin Drivers"
                ],
                "summary": "Get paginated list of drivers",
                "operationId": "1a7efeb46368c80dd58fda2377a45c5e",
                "responses": {
                    "200": {
                        "description": "Paginated list of drivers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AdminDriver"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Drivers"
                ],
                "summary": "Create a new driver",
                "operationId": "05e1037936256c29e5474f7ac783d22f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "balance": {
                                        "type": "integer"
                                    },
                                    "points": {
                                        "type": "integer"
                                    },
                                    "details": {
                                        "type": "object"
                                    },
                                    "settings": {
                                        "type": "object"
                                    },
                                    "taxopark_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Driver created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminDriver"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/super-admin/drivers/{driver}": {
            "get": {
                "tags": [
                    "Admin Drivers"
                ],
                "summary": "Get a single driver",
                "operationId": "2a40015edc545ae9a8f51bb42def1fd5",
                "parameters": [
                    {
                        "name": "driver",
                        "in": "path",
                        "description": "Driver ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Driver details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminDriver"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Driver not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin Drivers"
                ],
                "summary": "Update a driver",
                "operationId": "cf3e76113df16e600dcd6a421be80880",
                "parameters": [
                    {
                        "name": "driver",
                        "in": "path",
                        "description": "Driver ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string"
                                    },
                                    "balance": {
                                        "type": "integer"
                                    },
                                    "points": {
                                        "type": "integer"
                                    },
                                    "details": {
                                        "type": "object"
                                    },
                                    "settings": {
                                        "type": "object"
                                    },
                                    "taxopark_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Driver updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminDriver"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Driver not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Drivers"
                ],
                "summary": "Mark driver as inactive",
                "operationId": "879eed17c16571def4ed93df347045ff",
                "parameters": [
                    {
                        "name": "driver",
                        "in": "path",
                        "description": "Driver ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Driver marked as inactive",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminDriver"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Driver not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/super-admin/market": {
            "get": {
                "tags": [
                    "Admin Market"
                ],
                "summary": "Get list of products or discounts",
                "operationId": "b7219518189715726d0e87a8ebe8319f",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of items to fetch (product|discount)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "product",
                                "discount"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of items"
                    }
                }
            },
            "post": {
                "tags": [
                    "Admin Market"
                ],
                "summary": "Create product or discount",
                "operationId": "0ade1e3caa3b95536eb12cd1b34e920d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "product",
                                            "discount"
                                        ]
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "boolean"
                                    },
                                    "icon_type": {
                                        "type": "string"
                                    },
                                    "points": {
                                        "type": "integer"
                                    },
                                    "value": {
                                        "type": "integer"
                                    },
                                    "percent": {
                                        "type": "integer"
                                    },
                                    "icon": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created successfully"
                    }
                }
            }
        },
        "/api/super-admin/market/{id}": {
            "put": {
                "tags": [
                    "Admin Market"
                ],
                "summary": "Update product or discount (only title, description, status)",
                "operationId": "5b80358e95dcb3db7e01b3fe30a18a4f",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of item (product|discount)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "product",
                                "discount"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated successfully"
                    }
                }
            }
        },
        "/api/admin/orders": {
            "get": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Get all orders",
                "operationId": "3bd2889661cdab2ffdd9a3c26aee96c6",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter orders by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "accepted",
                                "completed",
                                "cancelled"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AdminOrder"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admin/orders/{id}": {
            "get": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Get single order by ID",
                "operationId": "266192160779cd669287f02bb5b3b733",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminOrder"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Update order by ID",
                "operationId": "b68bca16067b7073a1ae85e37d95b66b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "example": "completed"
                                    },
                                    "note": {
                                        "type": "string",
                                        "example": "Admin updated order"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminOrder"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Cancel order by ID",
                "operationId": "1a202ce7b504d56699c0adc8305eb049",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order cancelled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order cancelled successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AdminOrder"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/super-admin/taxoparks": {
            "get": {
                "tags": [
                    "Admin TaxoParks"
                ],
                "summary": "Get paginated list of taxoparks",
                "operationId": "d862e51748a22049ad914684283c5410",
                "responses": {
                    "200": {
                        "description": "Paginated list of taxoparks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AdminTaxoParkResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/super-admin/taxoparks/{taxopark}": {
            "get": {
                "tags": [
                    "Admin TaxoParks"
                ],
                "summary": "Get a single taxopark",
                "operationId": "01c40cb38647da4d17bc6d0f9878046d",
                "parameters": [
                    {
                        "name": "taxopark",
                        "in": "path",
                        "description": "TaxoPark ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TaxoPark details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminTaxoParkResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "TaxoPark not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin TaxoParks"
                ],
                "summary": "Update a taxopark",
                "operationId": "84ba957fdf3fe2c4449f0724bc8cb473",
                "parameters": [
                    {
                        "name": "taxopark",
                        "in": "path",
                        "description": "TaxoPark ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "region_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "TaxoPark updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminTaxoParkResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "TaxoPark not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin TaxoParks"
                ],
                "summary": "Mark taxopark as inactive",
                "operationId": "49a23eeb13a93e466ff4682f28b80bdf",
                "parameters": [
                    {
                        "name": "taxopark",
                        "in": "path",
                        "description": "TaxoPark ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TaxoPark marked as inactive",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminTaxoParkResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "TaxoPark not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Telegram orqali autentifikatsiya",
                "description": "Telegram WebApp orqali olingan initData ni yuborib foydalanuvchini autentifikatsiya qiladi. \n     *                  Agar foydalanuvchi mavjud bo'lmasa — yangi client sifatida yaratiladi.",
                "operationId": "7f46f80c3e564da009dbe7e94e76450a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "initData"
                                ],
                                "properties": {
                                    "initData": {
                                        "type": "string",
                                        "example": "query_id=AAE...&user=%7B%22id%22%3A123456%2C%22first_name%22%3A%22John%22%7D&hash=..."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Muvaffaqiyatli autentifikatsiya",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|vZ6J3D..."
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": "client"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Noto‘g‘ri initData",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "invalid initData"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/balance-history": {
            "get": {
                "tags": [
                    "Balance History"
                ],
                "summary": "Get balance history for authenticated user (client or driver)",
                "operationId": "caebb335428fe98750837b0ba44ae507",
                "responses": {
                    "200": {
                        "description": "List of balance history",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BalanceHistory"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/client/orders/{orderId}": {
            "delete": {
                "tags": [
                    "Client Orders"
                ],
                "summary": "Cancel an order by the authenticated client",
                "operationId": "1ccf1e6c55317839f8d77f49bc7afffe",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "ID of the order to cancel",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 111
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order cancelled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order cancelled successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Order already cancelled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order already cancelled."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cancellation failed: Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/client/orders/{order}/complete": {
            "post": {
                "tags": [
                    "Client Orders"
                ],
                "summary": "Complete an order by the client",
                "description": "Allows the client to complete a stopped order, transfer deposit to the driver, and notify the driver via event.",
                "operationId": "clientCompleteOrder",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "ID of the order to complete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order successfully completed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "order_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "driver_credited": {
                                                    "type": "number",
                                                    "format": "decimal",
                                                    "example": 20000
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order successfully completed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Client not allowed to complete this order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {},
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "You are not allowed to complete this order."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Order is not stopped and cannot be completed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {},
                                            "example": []
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Only stopped orders can be completed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/client/dashboard": {
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "Get client dashboard info",
                "operationId": "ab10082500ddf7caf01b72f380dcf03b",
                "responses": {
                    "200": {
                        "description": "Client dashboard retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "orders_count": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "balance": {
                                                    "type": "number",
                                                    "example": 0
                                                },
                                                "points": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/client/my_discounts": {
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "Get client's active discounts",
                "operationId": "bd1030a51aeee5105015d051333f4e2d",
                "responses": {
                    "200": {
                        "description": "List of client's discounts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ClientDiscount"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/client/market": {
            "get": {
                "tags": [
                    "Client Market"
                ],
                "summary": "List active discounts in the market",
                "operationId": "8ec021422d089e3c5a60beccc9c4a8ff",
                "responses": {
                    "200": {
                        "description": "Active discounts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Active discounts retrieved successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Discount"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Client Market"
                ],
                "summary": "Purchase a discount using client points",
                "operationId": "40b8eb8b9fde514567419620aaf84eea",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "discount_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Discount purchased successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Discount purchased successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Discount"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not enough points",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not have enough points to purchase this discount."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Discount not found or inactive",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Discount not found or inactive."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/client/orders": {
            "get": {
                "tags": [
                    "Client Orders"
                ],
                "summary": "Get all orders of the authenticated client",
                "operationId": "6a9e9425c7e9cc7f5c3181102530faa5",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter orders by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "created"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of client orders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Order"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Client Orders"
                ],
                "summary": "Create a new order",
                "operationId": "f7e34a98aa3b4e8bede9ca9fe55dc466",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "route_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "passengers": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-08-15"
                                    },
                                    "time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "14:30"
                                    },
                                    "client_deposit": {
                                        "type": "number",
                                        "example": 50000
                                    },
                                    "discount_id": {
                                        "type": "integer",
                                        "example": 2,
                                        "nullable": true
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+998901234567"
                                    },
                                    "optional_phone": {
                                        "type": "string",
                                        "example": "+998935551122",
                                        "nullable": true
                                    },
                                    "note": {
                                        "type": "string",
                                        "example": "Please call on arrival",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order created successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 111
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "created"
                                                },
                                                "scheduled_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "passengers": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+998901234567"
                                                },
                                                "optional_phone": {
                                                    "type": "string",
                                                    "example": "+998901234568",
                                                    "nullable": true
                                                },
                                                "note": {
                                                    "type": "string",
                                                    "example": "Please call on arrival",
                                                    "nullable": true
                                                },
                                                "price_order": {
                                                    "type": "string",
                                                    "example": "1107231.00"
                                                },
                                                "client_deposit": {
                                                    "type": "string",
                                                    "example": "50000.00"
                                                },
                                                "discount_percent": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "discount_summ": {
                                                    "type": "string",
                                                    "example": "110723.10"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-08-14 11:43:28"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Insufficient balance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Balance is insufficient for deposit payment."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Discount not found for this client",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found this discount"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create order."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/client/orders/{order_id}": {
            "get": {
                "tags": [
                    "Client Orders"
                ],
                "summary": "Get a specific order of the authenticated client",
                "operationId": "1756ef3e31be927e131f5c7fec169950",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "ID of the order to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 111
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order retrieved successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/client/me": {
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "Get authenticated client profile",
                "operationId": "9820f33299c93837caaec587d3a50d32",
                "responses": {
                    "200": {
                        "description": "Client profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Client profile retrieved successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 45
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "client"
                                                },
                                                "telegram_id": {
                                                    "type": "string",
                                                    "example": "123456789"
                                                },
                                                "settings": {
                                                    "properties": {
                                                        "notifications": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "night_mode": {
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "language": {
                                                            "type": "string",
                                                            "example": "uz"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Client not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Client"
                ],
                "summary": "Update authenticated client profile",
                "operationId": "3d56c436da3fb1c519bf6a5eb26edc63",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "full_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "+998901234567"
                                    },
                                    "notifications": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "night_mode": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "language": {
                                        "type": "string",
                                        "example": "uz"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Client profile updated successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 45
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "client"
                                                },
                                                "telegram_id": {
                                                    "type": "string",
                                                    "example": "123456789"
                                                },
                                                "settings": {
                                                    "properties": {
                                                        "notifications": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "night_mode": {
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "language": {
                                                            "type": "string",
                                                            "example": "uz"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Client not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/dispatcher/drivers": {
            "get": {
                "tags": [
                    "Dispatcher Drivers"
                ],
                "summary": "Get list of drivers in your taxopark",
                "operationId": "19290bb9b730a32259013e65390587c1",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by driver status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "inactive",
                                "archived"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of drivers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DispatcherDriver"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Dispatcher Drivers"
                ],
                "summary": "Create a new driver",
                "operationId": "d8a5ff95264b070dbf74fd022b6b40c9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "archived"
                                        ]
                                    },
                                    "balance": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "points": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "details": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "settings": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Driver created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DispatcherDriver"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/dispatcher/drivers/{driver}": {
            "get": {
                "tags": [
                    "Dispatcher Drivers"
                ],
                "summary": "Get single driver details",
                "operationId": "73d9692bcd7fe31a49f640430322013c",
                "parameters": [
                    {
                        "name": "driver",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Driver details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DispatcherDriver"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Dispatcher Drivers"
                ],
                "summary": "Update driver",
                "operationId": "ed62f404cb21ce6992e59347b107ff01",
                "parameters": [
                    {
                        "name": "driver",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "archived"
                                        ]
                                    },
                                    "balance": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "points": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "details": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "settings": {
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Driver updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DispatcherDriver"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Dispatcher Drivers"
                ],
                "summary": "Deactivate driver",
                "operationId": "28afd5219d1f24f8104425821fab5d74",
                "parameters": [
                    {
                        "name": "driver",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Driver deactivated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DispatcherDriver"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/driver/orders/{order}": {
            "post": {
                "tags": [
                    "Driver Orders"
                ],
                "summary": "Driver accepts an order",
                "description": "Assigns the authenticated driver to the given order if all checks pass.",
                "operationId": "d3253c94d09dce234fffe5d3fed04f9b",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "ID of the order to accept",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order successfully accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order successfully accepted."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Order cannot be accepted due to various business rules",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "This order already has a driver assigned."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Order not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Driver Orders"
                ],
                "summary": "Driver cancels an order",
                "description": "Allows a driver to cancel their assigned order. Completed orders cannot be canceled.",
                "operationId": "DriverCancelOrder",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "ID of the order to cancel",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order successfully cancelled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "order_id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "cancelled"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order successfully cancelled."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Forbidden / Not allowed (other driver tries to cancel)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "You are not allowed to cancel this order."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden / Completed order cannot be canceled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "You cannot cancel a completed order."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Order not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/driver/dashboard": {
            "get": {
                "tags": [
                    "Driver"
                ],
                "summary": "Driver dashboard stats",
                "description": "Returns total income, completed orders count, average rating, and recent orders for authenticated driver",
                "operationId": "9adbdef9b16031255792adbd550802f8",
                "responses": {
                    "200": {
                        "description": "Driver dashboard data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total_income": {
                                            "type": "integer",
                                            "example": 1500000
                                        },
                                        "completed_orders_count": {
                                            "type": "integer",
                                            "example": 25
                                        },
                                        "average_rating": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 4.75,
                                            "nullable": true
                                        },
                                        "recent_orders": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Order"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/driver/market": {
            "get": {
                "tags": [
                    "Driver Market"
                ],
                "summary": "List available products",
                "description": "Retrieve all active products that can be purchased by drivers.",
                "operationId": "6b05620c1d00c1165315c4298a74558f",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/driver/market/products/{product}": {
            "post": {
                "tags": [
                    "Driver Market"
                ],
                "summary": "Purchase a product",
                "description": "Driver purchases a product using points. Points will be deducted if sufficient balance exists.",
                "operationId": "5974133d2902ba82144b83f787742f40",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product purchased successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product successfully purchased."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Insufficient points or product unavailable."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/driver/orders": {
            "get": {
                "tags": [
                    "Driver Orders"
                ],
                "summary": "Get all orders for driver's taxopark",
                "description": "Returns all orders related to the driver's taxopark",
                "operationId": "351bf5f832d583c80983c4e638f28fab",
                "responses": {
                    "200": {
                        "description": "List of orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ClientOrder"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/driver/my_orders": {
            "get": {
                "tags": [
                    "Driver Orders"
                ],
                "summary": "Get driver's orders",
                "description": "Returns orders assigned to the driver, optionally filtered by status",
                "operationId": "fc0ca97cc4493f58ec66c38630fd8026",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter orders by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Completed"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of driver's orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ClientOrder"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/driver/orders/{order}/start": {
            "post": {
                "tags": [
                    "Driver Orders"
                ],
                "summary": "Start an order by driver",
                "description": "Allows a driver to start their assigned order. Order must have status 'Accepted'.",
                "operationId": "DriverStartOrder",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "ID of the order to start",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order successfully started",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "order_id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "started"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order successfully started."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Order cannot be started because it's not accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Only accepted orders can be started."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Driver not allowed to start this order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "You are not allowed to start this order."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Order not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/client/orders/{order}/review": {
            "post": {
                "tags": [
                    "Client Orders"
                ],
                "summary": "Submit a review for a completed order",
                "operationId": "428e6e3c68116f54451d9f398796360a",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order ID to review",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rating": {
                                        "description": "Rating for the order",
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "example": 5
                                    },
                                    "comment": {
                                        "description": "Optional comment for the review",
                                        "type": "string",
                                        "example": "Great driver!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Review created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/OrderReview"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You are not allowed to review this order."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Review already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You have already reviewed this order."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/OrderReview"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/referrals": {
            "get": {
                "tags": [
                    "Referrals"
                ],
                "summary": "Get referral statistics and points",
                "operationId": "7c04bdefab0f0132b8f4877fa59e7312",
                "responses": {
                    "200": {
                        "description": "Referral statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Referral statistics and points retrieved successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "statistics": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "this_month": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "this_week": {
                                                            "type": "integer",
                                                            "example": 1
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "referrers": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Referral"
                                                    }
                                                },
                                                "points": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "point_histories": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/PointHistory"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Referrals"
                ],
                "summary": "Add a referral using a promo code",
                "operationId": "d24cf571a21653487c7b9a32d93861ee",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "promo_code": {
                                        "type": "string",
                                        "example": "PROMO123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Referral added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Referral added successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid promo code",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid promo code"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User already referred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You have already been referred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/regions": {
            "get": {
                "tags": [
                    "Regions"
                ],
                "summary": "Get list of regions",
                "operationId": "2ea4e3f793fcf34f100e4d8b03ede681",
                "responses": {
                    "200": {
                        "description": "Regions list retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Region"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/regions/{region_id}": {
            "get": {
                "tags": [
                    "Regions"
                ],
                "summary": "Get region with associated taxoparks",
                "operationId": "85cc1f9d1a3e6cd06ce69ba70ce85579",
                "parameters": [
                    {
                        "name": "region_id",
                        "in": "path",
                        "description": "ID of the region",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Region and its taxoparks retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "region": {
                                                    "$ref": "#/components/schemas/Region"
                                                },
                                                "taxoparks": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Taxopark"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Region not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Region not found."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/routes/check/{from}/{to}": {
            "get": {
                "tags": [
                    "Routes"
                ],
                "summary": "Check for an active route between two taxoparks",
                "operationId": "1a7ec40c5b308bb677425d7496d9d1d8",
                "parameters": [
                    {
                        "name": "from",
                        "in": "path",
                        "description": "ID of the starting taxopark",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "to",
                        "in": "path",
                        "description": "ID of the destination taxopark",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Route found successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Route"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Route not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Route not found."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AdminClient": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "balance": {
                        "type": "integer"
                    },
                    "points": {
                        "type": "integer"
                    },
                    "settings": {
                        "type": "object"
                    },
                    "user": {
                        "type": "object"
                    },
                    "discounts": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "orders_count": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "AdminDispatcher": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "taxopark_id": {
                        "type": "integer"
                    },
                    "full_name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "boolean"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "type": "object"
                    },
                    "taxopark": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "AdminDriver": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "balance": {
                        "type": "integer"
                    },
                    "points": {
                        "type": "integer"
                    },
                    "details": {
                        "type": "object"
                    },
                    "settings": {
                        "type": "object"
                    },
                    "user": {
                        "type": "object"
                    },
                    "taxopark": {
                        "type": "object"
                    },
                    "orders_count": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "AdminOrder": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "status": {
                        "type": "string",
                        "example": "pending"
                    },
                    "scheduled_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-20 14:00:00"
                    },
                    "passengers": {
                        "type": "integer",
                        "example": 3
                    },
                    "price_summ": {
                        "type": "number",
                        "format": "float",
                        "example": 150000
                    },
                    "client_deposit": {
                        "type": "number",
                        "format": "float",
                        "example": 50000
                    },
                    "price_order": {
                        "type": "number",
                        "format": "float",
                        "example": 200000
                    },
                    "phone": {
                        "type": "string",
                        "example": "+998901234567"
                    },
                    "optional_phone": {
                        "type": "string",
                        "example": "+998931234567",
                        "nullable": true
                    },
                    "note": {
                        "type": "string",
                        "example": "Urgent order",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-15T10:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-16T10:00:00Z"
                    },
                    "client": {
                        "$ref": "#/components/schemas/AdminClient"
                    },
                    "driver": {
                        "$ref": "#/components/schemas/AdminDriver"
                    },
                    "route": {
                        "$ref": "#/components/schemas/Route"
                    },
                    "histories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderHistory"
                        }
                    },
                    "review": {
                        "$ref": "#/components/schemas/Review"
                    }
                },
                "type": "object"
            },
            "AdminTaxoParkResource": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "region": {
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "drivers": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "status": {
                                    "type": "string"
                                },
                                "balance": {
                                    "type": "integer"
                                },
                                "points": {
                                    "type": "integer"
                                },
                                "user": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "dispatchers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "BalanceHistory": {
                "title": "Balance History Resource",
                "description": "Balance history entry representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 150000
                    },
                    "type": {
                        "description": "Transaction type (deposit, withdrawal, etc.)",
                        "type": "string",
                        "example": "deposit"
                    },
                    "balance_after": {
                        "type": "number",
                        "format": "float",
                        "example": 350000
                    },
                    "description": {
                        "type": "string",
                        "example": "Deposit from bank",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-14 12:34:56"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-14 12:34:56"
                    }
                },
                "type": "object"
            },
            "ClientDiscount": {
                "title": "Client Discount Resource",
                "description": "Discount information for a client",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 5
                    },
                    "title": {
                        "type": "string",
                        "example": "Summer Sale"
                    },
                    "type": {
                        "description": "Discount type (percentage or fixed)",
                        "type": "string",
                        "example": "percentage"
                    },
                    "value": {
                        "description": "Discount value in percent or currency",
                        "type": "number",
                        "format": "float",
                        "example": 10
                    },
                    "icon": {
                        "type": "string",
                        "example": "https://example.com/icons/discount.png",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ClientOrder": {
                "title": "Client Order Resource",
                "description": "Order details for a client",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 102
                    },
                    "status": {
                        "description": "Order status",
                        "type": "string",
                        "example": "pending"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-08-15"
                    },
                    "time": {
                        "type": "string",
                        "example": "14:30"
                    },
                    "passengers": {
                        "type": "integer",
                        "example": 3
                    },
                    "phone": {
                        "type": "string",
                        "example": "+998901234567"
                    },
                    "optional_phone": {
                        "type": "string",
                        "example": "+998935551122",
                        "nullable": true
                    },
                    "note": {
                        "type": "string",
                        "example": "Please arrive 10 minutes early",
                        "nullable": true
                    },
                    "price_order": {
                        "type": "number",
                        "format": "float",
                        "example": 250000
                    },
                    "client_deposit": {
                        "type": "number",
                        "format": "float",
                        "example": 50000
                    },
                    "discount_percent": {
                        "type": "number",
                        "format": "float",
                        "example": 10
                    },
                    "discount_summ": {
                        "type": "number",
                        "format": "float",
                        "example": 25000
                    },
                    "driver": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Driver"
                            }
                        ],
                        "nullable": true
                    },
                    "route": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Route"
                            }
                        ],
                        "nullable": true
                    },
                    "review": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Review"
                            }
                        ],
                        "nullable": true
                    },
                    "histories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderHistory"
                        }
                    }
                },
                "type": "object"
            },
            "Client": {
                "title": "Client Resource",
                "description": "Client details with balance, points, and status",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 12
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 101
                    },
                    "status": {
                        "type": "string",
                        "example": "active"
                    },
                    "balance": {
                        "type": "number",
                        "format": "float",
                        "example": 150000
                    },
                    "points": {
                        "type": "integer",
                        "example": 300
                    },
                    "settings": {
                        "type": "object",
                        "example": {
                            "notifications": true,
                            "language": "uz"
                        },
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-14 12:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-14 13:45:00"
                    },
                    "user": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            }
                        ],
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Discount": {
                "title": "Discount Resource",
                "description": "Discount details",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 7
                    },
                    "title": {
                        "type": "string",
                        "example": "Loyalty Program"
                    },
                    "type": {
                        "description": "Discount type (percentage or fixed)",
                        "type": "string",
                        "example": "percentage"
                    },
                    "value": {
                        "description": "Discount value in percent or currency",
                        "type": "number",
                        "format": "float",
                        "example": 15
                    },
                    "points": {
                        "description": "Points needed to get this discount",
                        "type": "integer",
                        "example": 100
                    },
                    "icon": {
                        "type": "string",
                        "example": "https://example.com/icons/discount.png",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "DispatcherDriver": {
                "title": "Dispatcher Driver",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "taxopark_id": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "balance": {
                        "type": "number",
                        "format": "float"
                    },
                    "points": {
                        "type": "number",
                        "format": "float"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "nullable": true
                    },
                    "settings": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "type": "object",
                        "nullable": true
                    },
                    "taxopark": {
                        "type": "object",
                        "nullable": true
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DispatcherOrder"
                        }
                    }
                },
                "type": "object"
            },
            "DispatcherOrder": {
                "title": "Dispatcher Order",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "client_id": {
                        "type": "integer"
                    },
                    "driver_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "route_id": {
                        "type": "integer"
                    },
                    "passengers": {
                        "type": "integer"
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "time": {
                        "type": "string"
                    },
                    "price_order": {
                        "type": "number",
                        "format": "float"
                    },
                    "client_deposit": {
                        "type": "number",
                        "format": "float"
                    },
                    "driver_payment": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "discount_percent": {
                        "type": "integer",
                        "nullable": true
                    },
                    "discount_summ": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string"
                    },
                    "optional_phone": {
                        "type": "string",
                        "nullable": true
                    },
                    "note": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "DriverDashboard": {
                "title": "Driver Dashboard Resource",
                "description": "Driver dashboard statistics and recent orders",
                "properties": {
                    "total_income": {
                        "description": "Total income earned by driver",
                        "type": "number",
                        "format": "float",
                        "example": 1200000
                    },
                    "completed_orders_count": {
                        "description": "Number of completed orders",
                        "type": "integer",
                        "example": 154
                    },
                    "average_rating": {
                        "description": "Average rating of driver",
                        "type": "number",
                        "format": "float",
                        "example": 4.8
                    },
                    "recent_orders": {
                        "description": "List of recent orders",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Order"
                        }
                    }
                },
                "type": "object"
            },
            "Driver": {
                "title": "Driver Resource",
                "description": "Driver model resource representation",
                "properties": {
                    "id": {
                        "description": "Driver ID",
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "Related user ID",
                        "type": "integer",
                        "example": 5
                    },
                    "status": {
                        "description": "Driver status",
                        "type": "string",
                        "example": "active"
                    },
                    "balance": {
                        "description": "Driver balance",
                        "type": "number",
                        "format": "float",
                        "example": 150000
                    },
                    "points": {
                        "description": "Driver reward points",
                        "type": "integer",
                        "example": 250
                    },
                    "details": {
                        "description": "Additional driver details",
                        "type": "object",
                        "nullable": true
                    },
                    "settings": {
                        "description": "Driver settings",
                        "type": "object",
                        "nullable": true
                    },
                    "taxopark_id": {
                        "description": "Taxopark ID",
                        "type": "integer",
                        "example": 2
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-14T10:20:30"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-14T11:20:30"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "taxopark": {
                        "$ref": "#/components/schemas/Taxopark"
                    },
                    "orders": {
                        "description": "List of driver's orders",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Order"
                        }
                    }
                },
                "type": "object"
            },
            "OrderHistory": {
                "title": "Order History Resource",
                "description": "Order status changes history",
                "properties": {
                    "id": {
                        "description": "History record ID",
                        "type": "integer",
                        "example": 1
                    },
                    "status": {
                        "description": "Order status at this history record",
                        "type": "string",
                        "example": "pending"
                    },
                    "description": {
                        "description": "Reason or note for the status change",
                        "type": "string",
                        "example": "Order created by client"
                    },
                    "changed_by_type": {
                        "description": "Who changed the status (client, driver, admin)",
                        "type": "string",
                        "example": "client"
                    },
                    "changed_by_id": {
                        "description": "ID of the user who changed the status",
                        "type": "integer",
                        "example": 42
                    },
                    "created_at": {
                        "description": "When this history record was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-14 12:30:45"
                    }
                },
                "type": "object"
            },
            "Order": {
                "title": "Order Resource",
                "description": "Detailed order information",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 101
                    },
                    "Client": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Client"
                            }
                        ],
                        "nullable": true
                    },
                    "driver": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Driver"
                            }
                        ],
                        "nullable": true
                    },
                    "route": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Route"
                            }
                        ],
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "example": "pending"
                    },
                    "scheduled_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-15T14:30:00Z"
                    },
                    "passengers": {
                        "type": "integer",
                        "example": 3
                    },
                    "phone": {
                        "type": "string",
                        "example": "+998901234567"
                    },
                    "optional_phone": {
                        "type": "string",
                        "example": "+998935551122",
                        "nullable": true
                    },
                    "note": {
                        "type": "string",
                        "example": "Please arrive 10 minutes early",
                        "nullable": true
                    },
                    "price_order": {
                        "type": "number",
                        "format": "float",
                        "example": 250000
                    },
                    "client_deposit": {
                        "type": "number",
                        "format": "float",
                        "example": 50000
                    },
                    "discount_percent": {
                        "type": "number",
                        "format": "float",
                        "example": 10
                    },
                    "discount_summ": {
                        "type": "number",
                        "format": "float",
                        "example": 25000
                    },
                    "discount": {
                        "type": "string",
                        "example": null,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-14T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "OrderReview": {
                "title": "Order Review Resource",
                "description": "Order review details",
                "properties": {
                    "id": {
                        "description": "Review ID",
                        "type": "integer",
                        "example": 1
                    },
                    "order_id": {
                        "description": "Related order ID",
                        "type": "integer",
                        "example": 15
                    },
                    "client_id": {
                        "description": "Client ID who left the review",
                        "type": "integer",
                        "example": 3
                    },
                    "score": {
                        "description": "Review score from 1 to 5",
                        "type": "integer",
                        "example": 5
                    },
                    "comment": {
                        "description": "Review comment",
                        "type": "string",
                        "example": "Very satisfied with the service"
                    },
                    "created_at": {
                        "description": "When the review was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-14 14:32:00"
                    },
                    "updated_at": {
                        "description": "When the review was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-14 14:35:00"
                    }
                },
                "type": "object"
            },
            "PointHistory": {
                "title": "Point History Resource",
                "description": "Foydalanuvchi point tarixini qaytaradi",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "points": {
                        "type": "integer",
                        "example": 50
                    },
                    "description": {
                        "type": "string",
                        "example": "Referral bonus"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-14 16:00:00"
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product Resource",
                "description": "Product resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "status": {
                        "type": "boolean",
                        "example": true
                    },
                    "icon_type": {
                        "type": "string",
                        "example": "gift"
                    },
                    "points": {
                        "type": "integer",
                        "example": 150
                    },
                    "title": {
                        "type": "string",
                        "example": "Free Wash"
                    },
                    "description": {
                        "type": "string",
                        "example": "One free car wash at partner stations."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-16 12:30:00"
                    }
                },
                "type": "object"
            },
            "Referral": {
                "title": "Referral Resource",
                "description": "Referral ma'lumotlarini qaytaruvchi resource",
                "properties": {
                    "id": {
                        "description": "Referral egasining ID raqami",
                        "type": "integer",
                        "example": 12
                    },
                    "full_name": {
                        "description": "Referral bo‘yicha bog‘langan foydalanuvchi to‘liq ismi",
                        "type": "string",
                        "example": "John Doe",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Referral yaratilgan vaqt",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-14 15:45:12"
                    }
                },
                "type": "object"
            },
            "Region": {
                "title": "Region Resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Tashkent"
                    },
                    "status": {
                        "type": "string",
                        "example": "active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-14T10:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-14T10:30:00Z"
                    }
                },
                "type": "object"
            },
            "Review": {
                "title": "Review Resource",
                "description": "Review details for orders or items",
                "properties": {
                    "rating": {
                        "description": "Rating given, e.g., from 1 to 5",
                        "type": "integer",
                        "example": 5
                    },
                    "comment": {
                        "description": "Optional comment for the review",
                        "type": "string",
                        "example": "Great service!",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Route": {
                "title": "Route Resource",
                "description": "Route details including taxopark, pricing and status",
                "properties": {
                    "id": {
                        "description": "Route ID",
                        "type": "integer",
                        "example": 1
                    },
                    "from": {
                        "$ref": "#/components/schemas/Taxopark"
                    },
                    "to": {
                        "$ref": "#/components/schemas/Taxopark"
                    },
                    "status": {
                        "description": "Route status",
                        "type": "string",
                        "example": "active"
                    },
                    "deposit_client": {
                        "description": "Client deposit amount for this route",
                        "type": "number",
                        "format": "float",
                        "example": 50000
                    },
                    "distance_km": {
                        "description": "Distance in kilometers",
                        "type": "number",
                        "format": "float",
                        "example": 12.5
                    },
                    "price_in": {
                        "description": "Price for the route",
                        "type": "number",
                        "format": "float",
                        "example": 120000
                    },
                    "fee_per_client": {
                        "description": "Fee per client",
                        "type": "number",
                        "format": "float",
                        "example": 10000
                    }
                },
                "type": "object"
            },
            "Taxopark": {
                "title": "TaxoPark",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "region": {
                        "$ref": "#/components/schemas/Region"
                    },
                    "status": {
                        "type": "string",
                        "example": "active"
                    },
                    "name": {
                        "type": "string",
                        "example": "Toshkent Taxi"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User Resource",
                "description": "Authenticated user information",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 45
                    },
                    "role": {
                        "description": "User role (client, driver, admin, etc.)",
                        "type": "string",
                        "example": "client"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com",
                        "nullable": true
                    },
                    "telegram_id": {
                        "type": "string",
                        "example": "123456789",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-14 12:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-14 12:30:00"
                    },
                    "client": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Client"
                            }
                        ],
                        "nullable": true
                    },
                    "driver": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Driver"
                            }
                        ],
                        "nullable": true
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "401": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Unauthorized"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Sanctum authentication using Bearer token",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Admin Clients",
            "description": "Admin Clients"
        },
        {
            "name": "Admin Dashboard",
            "description": "Admin Dashboard"
        },
        {
            "name": "Admin Dispatcher",
            "description": "Admin Dispatcher"
        },
        {
            "name": "Admin Drivers",
            "description": "Admin Drivers"
        },
        {
            "name": "Admin Market",
            "description": "Admin Market"
        },
        {
            "name": "Admin Orders",
            "description": "Admin Orders"
        },
        {
            "name": "Admin TaxoParks",
            "description": "Admin TaxoParks"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Balance History",
            "description": "Balance History"
        },
        {
            "name": "Client Orders",
            "description": "Client Orders"
        },
        {
            "name": "Client",
            "description": "Client"
        },
        {
            "name": "Client Market",
            "description": "Client Market"
        },
        {
            "name": "Dispatcher Drivers",
            "description": "Dispatcher Drivers"
        },
        {
            "name": "Driver Orders",
            "description": "Driver Orders"
        },
        {
            "name": "Driver",
            "description": "Driver"
        },
        {
            "name": "Driver Market",
            "description": "Driver Market"
        },
        {
            "name": "Referrals",
            "description": "Referrals"
        },
        {
            "name": "Regions",
            "description": "Regions"
        },
        {
            "name": "Routes",
            "description": "Routes"
        }
    ]
}